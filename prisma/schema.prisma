// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  username    String       @unique
  password    String
  accountType ACCOUNT_TYPE
  verified    Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  token       Token[]
  bond        Bond[]

  @@map("user")
}

model Bond {
  id                                 Int           @id @default(autoincrement())
  image                              String
  firstName                          String
  lastName                           String
  organizationName                   String
  organizationEmail                  String
  phoneNumber                        String
  websiteUrl                         String
  comapnyRegistrationNumber          String
  socialMedia                        String[]
  organizationIncorporated           Boolean
  organizationLegalEstablishmentDate String
  organizationRevenue                String
  amountToRaise                      String
  reasonForRaisingMoney              String
  organizationHasLegalDocs           Boolean
  launchDate                         String
  serviceProvider                    String
  amountToBeRaised                   String
  duration                           String
  projectIrr                         String
  maxOutcomePay                      String
  transactionFee                     String
  totalPlatformCost                  String
  policyArea                         String
  targetPopulation                   String
  independentEvaluator               String
  overallObjectives                  String
  outcomeMetrics                     String
  outcomeTarget                      String
  category                           BOND_CATEGORY
  user                               User?         @relation(fields: [userId], references: [id])
  userId                             Int?
  createdAt                          DateTime      @default(now())
  updatedAt                          DateTime      @updatedAt

  @@map("bond")
}

model Token {
  id        Int      @id @default(autoincrement())
  subject   String
  expires   String
  validity  Boolean
  email     String
  code      String   @unique
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("token")
}

enum ACCOUNT_TYPE {
  INDIVIDUAL
  ORGANIZATION
}

enum BOND_CATEGORY {
  FIAT
  TOKENIZED
  BOTH
}
